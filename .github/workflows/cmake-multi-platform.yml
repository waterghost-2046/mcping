name: CMake Build and Release
on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: Release
            artifact_name: mcping-linux-amd64
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            build_type: Release
            artifact_name: mcping-linux-amd64-clang
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            build_type: Release
            artifact_name: mcping-macos-amd64
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            build_type: Release
            artifact_name: mcping-windows-amd64.exe
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set build directory path
        id: vars
        run: echo "build_dir=build" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Configure with CMake
        run: |
          cmake -B ${{ steps.vars.outputs.build_dir }} -S . -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
      
      - name: Build with CMake
        run: cmake --build ${{ steps.vars.outputs.build_dir }} --config ${{ matrix.build_type }}
      
      - name: Run mcping test
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            ./build/Release/mcping.exe tor.forgeban.xyz 25565 || true
          else
            ./build/mcping tor.forgeban.xyz 25565 || true
          fi
        shell: bash
      
      - name: Prepare artifact
        run: |
          mkdir -p artifacts
          if [ "$RUNNER_OS" == "Windows" ]; then
            cp build/Release/mcping.exe artifacts/${{ matrix.artifact_name }}
          else
            cp build/mcping artifacts/${{ matrix.artifact_name }}
          fi
        shell: bash
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: artifacts/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Display structure
        run: ls -R artifacts
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
